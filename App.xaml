<Application x:Class="File_Manager_WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:File_Manager_WPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- COLORS -->
        <Color x:Key="ControlLightColor">#eaf4ff</Color>
        <Color x:Key="BorderMediumColor">#727272</Color>
        <Color x:Key="DisabledBorderLightColor">Blue</Color>
        <Color x:Key="FocusedBorderColor">Red</Color>


        <!-- STYLES -->
        <!-- Button -->
        <Style TargetType="Button" x:Key="MenuButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="4 0" Padding="5 2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3361e0"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Button" x:Key="IconButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="3 10" Padding="3 3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3361e0"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button" x:Key="IconButtonBlue">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#3361e0" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="3 10" Padding="3 3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3361e0"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="IconButtonBlueSecond">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#3361e0" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3361e0"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="IconButtonGreen">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#6db23c" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="3 10" Padding="3 3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#6db23c"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button" x:Key="IconButtonRed">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#d64444" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="3 10" Padding="3 3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#d64444"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button" x:Key="IconButtonYellow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ffdc51" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="3 10" Padding="3 3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ffdc51"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="IconButtonOrange">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ff9f51" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="0" Margin="3 10" Padding="3 3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ff9f51"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground" Value="#bcbcbc" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox -->
        <Style TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="White" />
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyHeaderStyle">
            <Setter Property="Background" Value="Wheat" />
        </Style>

        <Style TargetType="ListView">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border" BorderThickness="2">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource ControlLightColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!--<Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource FocusedBorderColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewItem">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Red"/>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem Header="Копировать" 
                              Command="local:Commands.CopyOrMove"
                              CommandParameter="Copy"/>
                    <MenuItem Header="Переместить" 
                              Command="local:Commands.CopyOrMove"
                              CommandParameter="Move"/>
                    <MenuItem Header="Удалить" 
                              Command="local:Commands.Delete"/>
                    <MenuItem Header="Просмотр" 
                              Command="local:Commands.Details"/>
                    <MenuItem Header="Переименовать" 
                              Command="local:Commands.CopyOrMove"
                              CommandParameter="Rename"/>
                </ContextMenu>
            </Style.Resources>
            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border CornerRadius="2" SnapsToDevicePixels="True"
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}">
                            <Border Name="InnerBorder" CornerRadius="1"   BorderThickness="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF" />
                                    <GridViewRowPresenter Grid.RowSpan="2" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dbdbdb"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#a3a3a3"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#3361e0"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
